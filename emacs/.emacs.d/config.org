* Terminal
** Setting default shell: ZSH
Set the default shell to zsh. Make ansi-term stop asking to confirm shell.
   #+begin_src emacs-lisp
     (defvar my-term-shell "/bin/zsh")
     (defadvice ansi-term (before force-bash)
       (interactive (list my-term-shell)))
     (ad-activate 'ansi-term)
     (global-set-key (kbd "<M-return>") 'ansi-term)
   #+end_src

* Aliases
** Yes/Or/No
   Simple y/or/n substiution for yes/or/no prompts
   #+begin_src emacs-lisp
    (defalias 'yes-or-no-p 'y-or-n-p)
   #+end_src

* Visual and quality of life improvements
** No toolbar/menubar/scrollbar
   #+begin_src emacs-lisp
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)
   #+end_src
** Inhibit default splashcreen
   #+begin_src emacs-lisp
     (setq inhibit-startup-message t)
   #+end_src

** Logical scrolling
   More intuitive scrolling behavior when using C+n
   #+begin_src emacs-lisp
     (setq scroll-conservatively 100)
   #+end_src
** Turn off the bell
   #+begin_src emacs-lisp
     (setq ring-bell-function 'ignore)
   #+end_src
** Highlight current line
   #+begin_src emacs-lisp
     (when window-system (global-hl-line-mode t))
   #+end_src
** Prettify symbols
   #+begin_src emacs-lisp
     (when window-system(global-prettify-symbols-mode t))
   #+end_src
* Org-mode
** Snippets expansion fix
I honestly don't know why I need this yet. But this fix will make snippet expansion work.
#+begin_src emacs-lisp
  (when (version<= "9.2" (org-version))
    (require 'org-tempo))
#+end_src
** Org-bullets
   #+begin_src emacs-lisp
     (use-package org-bullets
       :ensure t
       :config
       (add-hook 'org-mode-hook (lambda () (org-bullets-mode))))
   #+end_src
* Packages
** Visual improvements
*** Which-key
Which-key provides a helpful context menu whenever chords are engaged.
#+begin_src emacs-lisp
  (use-package which-key
    :ensure t
    :init
    (which-key-mode))
#+end_src
*** Beacon
    Beacon shows you where your cursor is located when you switch to a buffer.
    #+begin_src emacs-lisp
      (use-package beacon
	:ensure t
	:init
	(beacon-mode 1))
    #+end_src

** IDO
*** Enable IDO
   #+begin_src emacs-lisp
     (setq ido-enable-flex-matching nil)
     (setq ido-create-new-buffer 'always)
     (setq ido-everywhere t)
     (ido-mode 1)
   #+end_src
*** id-vertical
    #+begin_src emacs-lisp
      (use-package ido-vertical-mode
	:ensure t
	:init
	(ido-vertical-mode 1))
      (setq ido-vertical-define-keys 'C-n-and-C-p-only)
    #+end_src
** smex
    ido-like behavior for M-x. remembers your most frequently called commands.
    #+begin_src emacs-lisp
      (use-package smex
	:ensure t
	:init (smex-initialize)
	:bind
	("M-x" . smex))
    #+end_src
** avy
   #+begin_src emacs-lisp 
     (use-package avy
       :ensure t
       :bind
       ("M-s" . avy-goto-char))
   #+end_src
** rainbow
   #+begin_src emacs-lisp
     (use-package rainbow-mode
       :ensure t
       :init (rainbow-mode 1))
   #+end_src
** switch-window
   Better window switching.
   #+begin_src emacs-lisp
     (use-package switch-window
       :ensure t
       :config
	 (setq switch-window-input-style 'minibuffer)
	 (setq switch-window-increase 4)
	 (setq switch-window-threshold 2)
	 (setq switch-window-shortcut-style 'qwerty)
	 (setq switch-window-qwerty-shortcuts
	     '("a" "s" "d" "f" "j" "k" "l" "i" "o"))
       :bind
	 ([remap other-window] . switch-window))
   #+end_src
* Buffers
** enable ibuffer
   #+begin_src emacs-lisp
     (global-set-key (kbd "C-x b") 'ibuffer)
   #+end_src
   
* Custom functions
** config edit/reload
*** edit
   #+begin_src emacs-lisp
     (defun config-visit()
       (interactive)
       (find-file "~/.emacs.d/config.org"))
     (global-set-key (kbd "C-c e") 'config-visit)
   #+end_src
*** reload
    #+begin_src emacs-lisp
      (defun config-reload ()
	(interactive)
	(org-babel-load-file (expand-file-name "~/.emacs.d/config.org")))
      (global-set-key (kbd "C-c r") 'config-reload)
    #+end_src
